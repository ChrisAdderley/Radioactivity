// Adds radiation tracking to all SAS-capable units
// Not rad-hardened
// kube
@PART[probeCoreCube]
{
	MODULE
	{
		name = RadioactiveSink
		SinkID = Drone
		IconID = 2
	}
	MODULE
	{
		name = RadiationDroneCore
		AbsorberID = Drone
		// Format is Sv/s and integer penalty
	 	PenaltyCurve
		{
			key = 0 0
			key = 1 3
			key = 100 3
		}
	}
}
// okto
@PART[probeCoreOcto]
{
	MODULE
	{
		name = RadioactiveSink
		SinkID = Drone
		IconID = 2
	}
	MODULE
	{
		name = RadiationDroneCore
		AbsorberID = Drone
		// Format is Sv/s and integer penalty
	 	PenaltyCurve
		{
			key = 0 0
			key = 1 3
			key = 100 3
		}
	}
}
// octo flat
@PART[probeCoreOcto2]
{
	MODULE
	{
		name = RadioactiveSink
		SinkID = Drone
		IconID = 2
	}
	MODULE
	{
		name = RadiationDroneCore
		AbsorberID = Drone
		// Format is Sv/s and integer penalty
	 	PenaltyCurve
		{
			key = 0 0
			key = 1 3
			key = 100 3
		}
	}
}
// Mark 2 drone
@PART[mk2DroneCore]
{
	MODULE
	{
		name = RadioactiveSink
		SinkID = Drone
		IconID = 2
	}
	MODULE
	{
		name = RadiationDroneCore
		AbsorberID = Drone
		// Format is Sv/s and integer penalty
	 	PenaltyCurve
		{
			key = 0 0
			key = 1 3
			key = 100 3
		}
	}
}
// medium rad-hardened
// hecs
@PART[probeCoreHex]
{
	MODULE
	{
		name = RadioactiveSink
		SinkID = Drone
		IconID = 2
	}
	MODULE
	{
		name = RadiationDroneCore
		AbsorberID = Drone
		// Format is Sv/s and integer penalty
	 	PenaltyCurve
		{
			key = 0 0
			key = 2 3
			key = 100 3
		}
	}
}
// rad hardened
// small RGU
@PART[probeStackSmall]
{
	MODULE
	{
		name = RadioactiveSink
		SinkID = Drone
		IconID = 2
	}
	MODULE
	{
		name = RadiationDroneCore
		AbsorberID = Drone
		// Format is Sv/s and integer penalty
	 	PenaltyCurve
		{
			key = 0 0
			key = 3 3
			key = 100 3
		}
	}
}
// large RGU
@PART[probeStackLarge]
{
	MODULE
	{
		name = RadioactiveSink
		SinkID = Drone
		IconID = 2
	}
	MODULE
	{
		name = RadiationDroneCore
		AbsorberID = Drone
		// Format is Sv/s and integer penalty
	 	PenaltyCurve
		{
			key = 0 0
			key = 3 3
			key = 100 3
		}
	}
}
